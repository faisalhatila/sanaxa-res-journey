{"version":3,"sources":["store/reducers/user.js","store/reducers/index.js","store/index.js","components/index.js","components/header/index.js","components/footer/index.js","components/layout/index.js","components/leftmenu/index.js","components/topmenu/index.js","routers/route.js","routers/privateRoute.js","containers/home/index.js","containers/login/index.js","containers/404/index.js","containers/dashboard/index.js","containers/index.js","routers/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isLogin","isError","isSuccess","rootReducer","combineReducers","User","state","type","payload","persistConfig","key","storage","blacklist","debug","enhancer","compose","applyMiddleware","thunk","logger","persistedReducer","persistReducer","store","createStore","persistor","persistStore","Header","props","Footer","Layout","children","LeftMenu","className","class","TopMenu","Route","withoutHeaderAndFooter","schema","Fragment","withoutLayout","PrivateRoute","HomeContainer","to","Component","LoginContainer","style","backgroundImage","for","id","aria-describedby","placeholder","PageNotFound","Dashboard","_HomeContainer","_LoginContainer","_PageNotFound","_Dashboard","Router","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61357214.chunk.js","sourcesContent":["import Constants from \"../constants\";\r\n\r\nconst initialState = {\r\n  isLogin: false,\r\n  isError: false,\r\n  isSuccess: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport User from \"./user\";\r\nexport const rootReducer = combineReducers({\r\n  User\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [],\r\n  debug: true\r\n};\r\nconst enhancer = compose(applyMiddleware(thunk, logger));\r\nconst initialState = {};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nlet store = createStore(persistedReducer, initialState, enhancer);\r\nlet persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import _Header from \"./header\";\r\nimport _Footer from \"./footer\";\r\nimport _Layout from \"./layout\";\r\nimport _LeftMenu from \"./leftmenu\";\r\nimport _TopMenu from \"./topmenu\";\r\n\r\nexport const Header = _Header;\r\nexport const Footer = _Footer;\r\nexport const Layout = _Layout;\r\nexport const LeftMenu = _LeftMenu;\r\nexport const TopMenu = _TopMenu;\r\n","import React from \"react\";\r\nimport { TopMenu } from \"..\";\r\n\r\nconst Header = (props) => {\r\n  return <TopMenu />;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = props => {\r\n  return <h1>Footer</h1>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div>\r\n      {/* <h1>Layout</h1> */}\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst LeftMenu = () => {\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <div className=\"container leftMenuContainer\">\r\n        <div className=\"col-2 leftMenuMainDiv\">\r\n          <h2>\r\n            <strong>Snaxa</strong>\r\n          </h2>\r\n          <div className=\"leftMenuMenuLinksMainDiv\">\r\n            <ul>\r\n              <li className=\"mt-3\">\r\n                <i class=\"fas fa-border-all mr-4\"></i>Dashboard\r\n              </li>\r\n              <li className=\"mt-3\">\r\n                <i class=\"fas fa-border-all mr-4\"></i>Dashboard\r\n              </li>\r\n              <li className=\"mt-3\">\r\n                <i class=\"fas fa-border-all mr-4\"></i>Dashboard\r\n              </li>\r\n              <li className=\"mt-3\">\r\n                <i class=\"fas fa-border-all mr-4\"></i>Dashboard\r\n              </li>\r\n              <li className=\"mt-3\">\r\n                <i class=\"fas fa-border-all mr-4\"></i>Dashboard\r\n                <i class=\"fas fa-caret-down ml-4\"></i>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftMenu;\r\n","import React from \"react\";\r\n\r\nconst TopMenu = () => {\r\n  return (\r\n    <div className=\"topMenuMainDiv\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-between align-items-center\">\r\n          <p>\r\n            <i class=\"far fa-question-circle\"></i>Help\r\n          </p>\r\n          <p>Dashboard</p>\r\n          <div className=\"userInfoDiv d-flex align-items-center\">\r\n            <div className=\"mr-2\">\r\n              <i class=\"far fa-user\"></i>\r\n            </div>\r\n            <div>\r\n              <p className=\"userName\">Alaska Restaurant</p>\r\n              <p className=\"userJoiningStartDate\">User Since 2019</p>\r\n            </div>\r\n            <i class=\"fas fa-caret-down ml-2\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","import React from \"react\";\r\nimport { Route as ReactRouter } from \"react-router-dom\";\r\nimport { Footer, Header, Layout } from \"../components\";\r\n\r\nconst Route = props => {\r\n  const withoutHeaderAndFooter = props.withoutHeaderAndFooter;\r\n  const schema = (\r\n    <React.Fragment>\r\n      {!withoutHeaderAndFooter && <Header />}\r\n      <ReactRouter {...props} />\r\n      {!withoutHeaderAndFooter && <Footer />}\r\n    </React.Fragment>\r\n  );\r\n  if (props.withoutLayout) return schema;\r\n  return <Layout>{schema}</Layout>;\r\n};\r\n\r\nexport default Route;\r\n","import React from \"react\";\r\nimport { Route as ReactRouter, Redirect } from \"react-router-dom\";\r\nimport { Footer, Header, Layout } from \"../components\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const isAuthorized = true;\r\n  if (!isAuthorized) return <Redirect to=\"/404\" />;\r\n  const withoutHeaderAndFooter = props.withoutHeaderAndFooter;\r\n  const schema = (\r\n    <React.Fragment>\r\n      {withoutHeaderAndFooter && <Header />}\r\n      <ReactRouter {...props} />\r\n      {withoutHeaderAndFooter && <Footer />}\r\n    </React.Fragment>\r\n  );\r\n  if (props.withoutLayout) return schema;\r\n  return <Layout>{schema}</Layout>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HomeContainer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"home-container\">\r\n        I AM HOME <Link to=\"/login\">Go to Login</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass LoginContainer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage:\r\n            \"linear-gradient(0deg, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7)), url(assets/img/loginScreen/background.jpg)\",\r\n        }}\r\n        className=\"loginPageMainDiv\"\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"loginScreenRow1\">\r\n            <h2>\r\n              <strong>Snaxa</strong>\r\n            </h2>\r\n            <p>Restaurant Login Panel</p>\r\n            <div className=\"loginPageFormDiv col-12 col-lg-4 col-md-6 offset-lg-4 offset-md-3 mt-3\">\r\n              <p>Login In To Your Account</p>\r\n              <form className=\"mt-2\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleInputEmail1\">User Name</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputEmail1\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Enter email\"\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleInputPassword1\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputPassword1\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    class=\"form-check-input\"\r\n                    id=\"exampleCheck1\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"exampleCheck1\">\r\n                    Keep Me Looged In\r\n                  </label>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary loginButton mt-2\">\r\n                  Submit\r\n                </button>\r\n                <p className=\"createAccountText pt-2 pb-2\">\r\n                  Dont have an account?\r\n                  <span className=\"createAccountLabel\">Create an account</span>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PageNotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>404</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from \"react\";\r\nimport { LeftMenu } from \"../../components\";\r\n\r\nexport default class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeftMenu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import _HomeContainer from \"./home\";\r\nimport _LoginContainer from \"./login\";\r\nimport _PageNotFound from \"./404\";\r\nimport _Dashboard from \"./dashboard\";\r\n\r\nexport const HomeContainer = _HomeContainer;\r\nexport const LoginContainer = _LoginContainer;\r\nexport const PageNotFound = _PageNotFound;\r\nexport const Dashboard = _Dashboard;\r\n","import React from \"react\";\r\nimport { Switch, Redirect } from \"react-router-dom\";\r\nimport Route from \"./route\";\r\nimport PvtRoute from \"./privateRoute\";\r\nimport {\r\n  HomeContainer,\r\n  LoginContainer,\r\n  PageNotFound,\r\n  Dashboard,\r\n} from \"../containers\";\r\nconst Router = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={HomeContainer} />\r\n      <PvtRoute exact path=\"/login\" component={LoginContainer} />\r\n      <Route exact path=\"/dashboard\" component={Dashboard} />\r\n      <Route exact path=\"/404\" component={PageNotFound} />\r\n      <Route exact path=\"/*\" component={() => <Redirect to=\"/404\" />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./store\";\r\nimport Router from \"./routers\";\r\nimport \"./App.scss\";\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <BrowserRouter>\r\n          <div className=\"app\">\r\n            <Router />\r\n          </div>\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}